image: python:3.7.0

# Change pip's cache directory to be inside the project directory since we can
# # only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
#
#     # Pip's cache doesn't store the python packages
#     # https://pip.pypa.io/en/stable/reference/pip_install/#caching
#     #
#     # If you want to also cache the installed packages, you have to install
#     # them in a virtualenv and cache it as well.



before_script:
        #  - apt-get update -y && apt-get install libhdf5-serial-dev -y
  - python -V               # Print out python version for debugging
  - python -m venv venv
  - source venv/bin/activate
  - pip install -U pip
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'


stages:
  - test
  - installation_pip

check_code:
  tags:
  - modern
  stage: test
  script:
  - pip install poetry
  - poetry install
  - mkdir cert
  - echo "$ca_cert" > "./cert/Proteomicsdb-Prosit.crt"
  - echo "$cert" > "./cert/ci-pipeline.crt"
  - echo "$key" > "./cert/ci-pipeline.key"
  - python -m pytest tests/ --cov=prosit_grpc --junitxml=junit.xml --cov-report=xml

  artifacts:
    reports:
      junit: junit.xml
      cobertura: coverage.xml


check_simple_installation:
  tags:
  - modern
  stage: installation_pip
  script:
  - pip install -e git+https://git@gitlab.lrz.de:proteomics/prosit_tools/prosit_grpc.git@$CI_COMMIT_SHORT_SHA#egg=prosit_grpc
